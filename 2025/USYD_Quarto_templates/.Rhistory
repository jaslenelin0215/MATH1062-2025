library(knitr)
opts_chunk$set(tidy = TRUE, cache = FALSE)
library(knitr)
# Read in data
data = read.csv("data/2023fatalities.csv", header=TRUE)
# Names of Variables
names(data)
# Size of Data (rows and columns)
dim(data)
# Structure of Data (tells us how each variable is stored in R)
str(data, vec.len=2)
# Change type of Variables
data$Crash.ID=as.factor(data$Crash.ID)
data$Month=as.factor(data$Month)
# New structure of Data
# Display the first 5 variables using list.len=5
str(data, list.len=5)
# New structure of Data
# Display the first 5 variables using list.len=5
str(data, list.len=5, vec.len=2)
# New structure of Data
# Display the 11th to 15th variables
str(data[c(11,12,13,14,15)])
# Produce a barplot
barplot(table(Dayweek), col=rgb(0.2,0.4,0.6,0.6))
# Produce a barplot
barplot(table(Dayweek), col=rgb(0.2,0.4,0.6,0.6))
library(knitr)
opts_chunk$set(tidy = TRUE, cache = FALSE)
library(knitr)
# Read in data
data = read.csv("data/2023fatalities.csv", header=TRUE)
# Names of Variables
names(data)
# Size of Data (rows and columns)
dim(data)
# Structure of Data (tells us how each variable is stored in R)
str(data, vec.len=2)
# Change qualitative variables stored as "numeric" to "factors"
data$Crash.ID=as.factor(data$Crash.ID)
data$Month=as.factor(data$Month)
# New structure of Data
# Display the first 5 variables using list.len=5
str(data, list.len=5)
# Change quantitative variables stored as "characters" to "numeric"
data$Speed.Limit=as.numeric(data$Speed.Limit)
# New structure of Data
# Display variables 11 to 15
str(data[c(11,12,13,14,15)])
# Select the DayWeek variable from the whole data frame
Dayweek = data$Dayweek
# Produce a frequency table of fatalities per day of the week
table(Dayweek)
# Order days
Dayweek=factor(Dayweek,levels= c("Monday", "Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
table(Dayweek)
# Produce a barplot
barplot(table(Dayweek), col=rgb(0.2,0.4,0.6,0.6))
# Produce a barplot
barplot(table(Dayweek), col= "blue")
# Produce a barplot
barplot(table(Dayweek), col= "lilac")
# Produce a barplot
barplot(table(Dayweek), col= "lightorange")
mycols = c("grey"*5, "orange", "grey")
mycols = c(rep("grey", 5), "orange", "grey")
mycols
# Produce a barplot
barplot(table(Dayweek), col = mycols)
# Produce a barplot
barplot(table(Dayweek), col = mycols, main = "Fatalities by Day of the Week", xlab = "Fatalities", ylab = "Day of the Week")
# Select the variable Age
Age = data$Age
# Define end points for class intervals
breaks=c(0,18,25,70,101)
# Build frequency table
table(cut(Age,breaks,right=F))
Age = filter(Age, Age > 0)
Age
# Select the variable Age
Age = data$Age
# Define end points for class intervals
breaks=c(0,18,25,70,101)
# Build frequency table
table(cut(Age,breaks,right=F))
Age
Age = select(Age, Age > 0)
# Select the variable Age
Age = data$Age
Age = dplyr::select(Age, Age > 0)
?select
Age = dplyr::select(Age > 0)
?filter
Age = dplyr::filter(Age, Age > 0)
Age
# Select the variable Age
Age = data$Age
Age = dplyr::filter(Age > 0)
# Select the variable Age
Age = data$Age
Age = dplyr::filter(data, Age > 0)
# Define end points for class intervals
breaks=c(0,18,25,70,101)
# Build frequency table
table(cut(Age,breaks,right=F))
Age
breaks
breaks=seq(0,102,2) # This sets the breaks to be every 2 numbers
breaks
Age_reduced = Age[1:1000]  # only look at subset of data
library(knitr)
opts_chunk$set(tidy = TRUE, cache = FALSE)
library(knitr)
# Read in data
data = read.csv("data/2023fatalities.csv", header=TRUE)
# Names of Variables
names(data)
# Size of Data (rows and columns)
dim(data)
# Structure of Data (tells us how each variable is stored in R)
str(data, vec.len=2)
# Change qualitative variables stored as "numeric" to "factors"
data$Crash.ID=as.factor(data$Crash.ID)
data$Month=as.factor(data$Month)
# New structure of Data
# Display the first 5 variables using list.len=5
str(data, list.len=5)
# Change quantitative variables stored as "characters" to "numeric"
data$Speed.Limit=as.numeric(data$Speed.Limit)
# New structure of Data
# Display variables 11 to 15
str(data[c(11,12,13,14,15)])
# Select the DayWeek variable from the whole data frame
Dayweek = data$Dayweek
# Produce a frequency table of fatalities per day of the week
table(Dayweek)
# Order days
Dayweek=factor(Dayweek,levels= c("Monday", "Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
table(Dayweek)
mycols = c(rep("grey", 5), "orange", "grey")
# Produce a barplot
barplot(table(Dayweek), col = mycols, main = "Fatalities by Day of the Week", ylab = "Fatalities", xlab = "Day of the week")
# Select DayWeek and Gender variables
Dayweek = data$Dayweek
Gender = data$Gender
# Produce a double frequency table (contingency table)
data1 = table(Gender, Dayweek)
data1
barplot(data1, main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c('red',"lightblue","lightgreen",'orange', "purple", "pink"),
legend = rownames(data1))
barplot(data1, main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c('red',"lightblue","lightgreen",'orange', "purple", "pink"),
legend = rownames(data1), beside=TRUE)
barplot(data1[-c(1,3,5,6),], main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c("lightblue","orange"),
legend = rownames(data1[-c(1,3,5,6),]), beside=TRUE)
hist(data$Age, xlab="Age", ylab="Frequency",
main="Histogram for Age of Road Fatalities")
# Select the variable Age
Age = data$Age
# Define end points for class intervals
breaks=c(-10,18,25,70,101)
# Build frequency table
table(cut(Age,breaks,right=F))
# Convert the frequency table into densities
table(cut(Age,breaks,right=F))/length(Age)
hist(Age,br=breaks,right=F,freq=F,
xlab="Age (years)", ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2023")
# Replacing the "-9" entries
data$Age[data$Age==-9] = NA
Age = data$Age
breaks=c(0,18,25,70,101)
hist(data$Age,br=breaks,freq=F,right=F,
xlab="Age",  ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2023")
par(mfrow=c(1,2))  # This puts the graphic output in 1 row with 2 columns
breaks=seq(0,102,2) # This sets the breaks to be every 2 numbers
hist(Age,br=breaks,freq=F,right=F,
xlab="Age", ylab='Density')
breaks=c(0,18,25,70,101)
hist(Age,br=breaks,freq=F,right=F,
xlab="Age",ylab='Density')
breaks=c(0,18,25,70,101)
#table(cut(Age,breaks,right=F))
hist(Age,br=breaks,freq=F,right=F,
xlab="Age (in years)", ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2020")
AgeF = data$Age[data$Gender=="Female"]   # This selects just the female ages.
AgeM = data$Age[data$Gender=="Male"]
par(mfrow=c(1,2))  # This puts the graphic output in 1 row with 2 columns
hist(AgeF,freq = F)
hist(AgeM,freq = F)
breaks=c(0,18,25,70,101)
hist(Age,br=breaks,freq=T,right=F,
xlab="Age (in years)", ylab="total numbers",
main="Histogram (with total numbers as height) for Age of Road Fatalities")
Age_reduced = Age[1:1000]  # only look at subset of data
par(mfrow = c(1,3))
hist(Age_reduced,breaks=3)
hist(Age_reduced,breaks=20)
hist(Age_reduced,breaks=50)
par(mfrow=c(1,2))  # This puts the graphic output in 1 row with 2 columns
breaks=seq(0,102,2) # This sets the breaks to be every 2 numbers
hist(Age,br=breaks,freq=F,right=F,
xlab="Age", ylab='Density')
breaks=c(0,18,25,70,101)
hist(Age,br=breaks,freq=F,right=F,
xlab="Age",ylab='Density')
library(knitr)
opts_chunk$set(tidy = TRUE, cache = FALSE)
library(knitr)
# Read in data
data = read.csv("data/2023fatalities.csv", header=TRUE)
# Names of Variables
names(data)
# Size of Data (rows and columns)
dim(data)
# Structure of Data (tells us how each variable is stored in R)
str(data, vec.len=2)
# Change qualitative variables stored as "numeric" to "factors"
data$Crash.ID=as.factor(data$Crash.ID)
data$Month=as.factor(data$Month)
# New structure of Data
# Display the first 5 variables using list.len=5
str(data, list.len=5)
# Change quantitative variables stored as "characters" to "numeric"
data$Speed.Limit=as.numeric(data$Speed.Limit)
# New structure of Data
# Display variables 11 to 15
str(data[c(11,12,13,14,15)])
# Select the DayWeek variable from the whole data frame
Dayweek = data$Dayweek
# Produce a frequency table of fatalities per day of the week
table(Dayweek)
# Order days
Dayweek=factor(Dayweek,levels= c("Monday", "Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
table(Dayweek)
mycols = c(rep("grey", 5), "orange", "grey")
# Produce a barplot
barplot(table(Dayweek), col = mycols, main = "Fatalities by Day of the Week", ylab = "Fatalities", xlab = "Day of the week")
# Select DayWeek and Gender variables
Dayweek = data$Dayweek
Gender = data$Gender
# Produce a double frequency table (contingency table)
data1 = table(Gender, Dayweek)
data1
barplot(data1, main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c('red',"lightblue","lightgreen",'orange', "purple", "pink"),
legend = rownames(data1))
barplot(data1, main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c('red',"lightblue","lightgreen",'orange', "purple", "pink"),
legend = rownames(data1), beside=TRUE)
barplot(data1[-c(1,3,5,6),], main="Fatalities by Day of the Week and Gender",
xlab="Day of the week", ylab = "Fatalities", col=c("lightblue","orange"),
legend = rownames(data1[-c(1,3,5,6),]), beside=TRUE)
hist(data$Age, xlab="Age", ylab="Frequency",
main="Histogram for Age of Road Fatalities")
# Select the variable Age
Age = data$Age
# Define end points for class intervals
breaks=c(-10,18,25,70,101)
# Build frequency table
table(cut(Age,breaks,right=F))
# Convert the frequency table into densities
table(cut(Age,breaks,right=F))/length(Age)
hist(Age,br=breaks,right=F,freq=F,
xlab="Age (years)", ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2023")
# Replacing the "-9" entries
data$Age[data$Age==-9] = NA
Age = data$Age
breaks=c(0,18,25,70,101)
hist(data$Age,br=breaks,freq=F,right=F,
xlab="Age",  ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2023")
par(mfrow=c(1,2))  # This puts the graphic output in 1 row with 2 columns
breaks=seq(0,102,2) # This sets the breaks to be every 2 numbers
hist(Age,br=breaks,freq=F,right=F,
xlab="Age", ylab='Density')
breaks=c(0,18,25,70,101)
hist(Age,br=breaks,freq=F,right=F,
xlab="Age",ylab='Density')
breaks=c(0,18,25,70,101)
#table(cut(Age,breaks,right=F))
hist(Age,br=breaks,freq=F,right=F,
xlab="Age (in years)", ylab="Density",
main="Histogram for Age of Road Fatalities in Australia 1989-2020")
AgeF = data$Age[data$Gender=="Female"]   # This selects just the female ages.
AgeM = data$Age[data$Gender=="Male"]
par(mfrow=c(1,2))  # This puts the graphic output in 1 row with 2 columns
hist(AgeF,freq = F)
hist(AgeM,freq = F)
breaks=c(0,18,25,70,101)
hist(Age,br=breaks,freq=T,right=F,
xlab="Age (in years)", ylab="total numbers",
main="Histogram (with total numbers as height) for Age of Road Fatalities")
Age_reduced = Age[1:1000]  # only look at subset of data
par(mfrow = c(1,3))
hist(Age_reduced,breaks=3)
hist(Age_reduced,breaks=10)
hist(Age_reduced,breaks=50)
Year = data$Year
plot(Age, Year)
heatmap(table(Age, Year), Rowv=NA, Colv=NA, scale='none', main='Heatmap of frequencies')
Age = data$Age
summary(Age)
par(mfrow=c(1,2))
boxplot(Age) # We can plot the box plot vertically
boxplot(Age, horizontal=T) # Or horizontally
Gender = data$Gender
# Select each of the data entries in Age if the corresponding data entry in Gender is Female
summary(Age[Gender=="Female"])
# Select each of the data entries in Age if the corresponding data entry in Gender is Female
summary(Age[Gender=="Male"])
# Filtering the gender variable to only include "female" and "male" values
data$Gender = factor(data$Gender, levels= c("Female", "Male"))
# Selecting the gender variable
Gender = data$Gender
boxplot(Age~Gender, horizontal = T)
x = 5   # This assigns the value 5 to x
x == 5  # This checks to see if x equals 5
x = 10
is.numeric(x) & x < 20 # True and True
x = 10
is.numeric(x) & x < 0 # True and False
x = 10
!is.numeric(x) | x < 20 # False and True
x = 10
is.character(x) & x < 0 # False and False
x = c(-1, 0, 1)
# Check each element of x against the condition (elementwise)
x <= 0
x = 1:10
# Check each element of x against the condition (elementwise)
x <= 5
sum(x <= 5) # sum over those TRUEs (data points <= 5)
# creating a data frame
rating = 1:5
animal = c('koala', 'hedgehog', 'sloth', 'panda', 'alligator')
country = c('Australia', 'Italy', 'Peru', 'China', "USA")
avg_sleep_hours = c(21, 18, 17, 10, 15)
sleepers = data.frame(rating, animal, country, avg_sleep_hours)
str(sleepers)
sleepers1 = sleepers[sleepers$rating<3, ]
dim(sleepers1)
str(sleepers1)
sleepers2 = sleepers[sleepers$rating>3 & sleepers$avg_sleep_hours>15, ]
dim(sleepers2)
str(sleepers2)
names(data)
data.driver = data[data$Road.User=='Driver',]
Age.driver = data.driver$Age
breaks = c(0,18,25,70,101)
# Produce a histogram
hist(Age.driver,br=breaks,freq=F,right=F,
xlab="Age (in years)", ylab="Density",
main="Histogram for Age of Road Fatalities of drivers in Australia 1989-2020")
# Driver's licence data for SA Q4 2023
licence.sa = read.csv("data/drivers-licences-by-postcode-age-and-sex-q4-2023.csv", header=T)
str(licence.sa)
# Convert data type of Total to numeric
licence.sa$Total = as.numeric(licence.sa$Total)
breaks = c(0,18,25,70,101)
licence.sa$Age = cut(licence.sa$Age,breaks,right=F)
head(licence.sa)
licence.sa.pooled = aggregate(Total ~ Age, sum, data=licence.sa)
head(licence.sa.pooled)
Total
barplot(Total, names.arg=licence.sa.pooled$Age, ylab='Number of drivers licences in 2023')
Total = licence.sa.pooled$Total
Total
Total = licence.sa.pooled$Total
barplot(Total, names.arg=licence.sa.pooled$Age, ylab='Number of drivers licences in 2023', ylim = c(0, 1000000))
options(scipen=999)
Total = licence.sa.pooled$Total
barplot(Total, names.arg=licence.sa.pooled$Age, ylab='Number of drivers licences in 2023', ylim = c(0, 1000000))
